spring.application.name=communication2
server.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/communication2
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update

communication.getAll.url=http://localhost:8081/api/

# Kafka broker connection
spring.kafka.bootstrap-servers=localhost:9092


                                     #PRODUCER DETAILS#
#Producer serializer config: convert object to json
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#Don't add type headers so consumer can deserialize without exact package name match
#spring.kafka.producer.properties.spring.json.add.type.headers=false

spring.kafka.consumer.group-id=user-group

#Delivery guarantees
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.delivery.timeout.ms=120000

# Controls whether Spring fails app startup if Kafka is unreachable.
spring.kafka.admin.fail-fast=true


                                   #CONSUMER DETAILS
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.communication.communication.dto


